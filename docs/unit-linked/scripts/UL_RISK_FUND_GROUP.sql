-- CREATE TABLE UL_RISK_FUND_GROUP
CREATE TABLE [PAS_IMPL].[UL_RISK_FUND_GROUP]
(
	[RISK_FUND_GROUP_ID] [UNIQUEIDENTIFIER]
		CONSTRAINT [PK_UL_RISK_FUND_GROUP]
PRIMARY KEY CLUSTERED ([RISK_FUND_GROUP_ID] ASC)
)
GO

-- CREATE HISTORY TABLE
CREATE TABLE [PAS_IMPL].[UL_RISK_FUND_GROUP_HISTORY]
(
	[RISK_FUND_GROUP_HISTORY_ID] [UNIQUEIDENTIFIER],
	[RISK_FUND_GROUP_ID] [UNIQUEIDENTIFIER],
	[OPERATION] [NVARCHAR](1),
	CONSTRAINT [PK_UL_RISK_FUND_GROUP_HISTORY]
PRIMARY KEY CLUSTERED ([RISK_FUND_GROUP_HISTORY_ID] ASC)
)
GO

-- CREATE TRIGGER
CREATE TRIGGER [PAS_IMPL].[UL_RISK_FUND_GROUP_HISTORY_TRIGGER]
ON [PAS_IMPL].[UL_RISK_FUND_GROUP]
AFTER INSERT, UPDATE, DELETE
AS  
BEGIN
	DECLARE @operation NVARCHAR(1)
	IF EXISTS(SELECT *
	FROM inserted)
	  IF EXISTS(SELECT *
	FROM deleted)
	    SELECT @operation = 'U'
	ELSE
	    SELECT @operation = 'I'
	ELSE
		IF EXISTS(SELECT *
	FROM deleted)
    SELECT @operation = 'D'

	DECLARE @riskFundGroupId UNIQUEIDENTIFIER;

	IF @operation != 'D'
	
		SELECT @riskFundGroupId = RISK_FUND_GROUP_ID
	FROM inserted
	ELSE 
		SELECT @riskFundGroupId = RISK_FUND_GROUP_ID
	FROM deleted

	INSERT INTO PAS_IMPL.UL_RISK_FUND_GROUP_HISTORY
		(RISK_FUND_GROUP_HISTORY_ID, RISK_FUND_GROUP_ID, OPERATION)
	VALUES
		(NEWID(), @riskFundGroupId, @operation)
END

SET QUOTED_IDENTIFIER ON
GO

-- CREATE VIEW
CREATE VIEW [PAS_IMPL].[UL_RISK_FUND_GROUP_VIEW]
AS
	SELECT
		[RISK_FUND_GROUP_ID] AS RISK_FUND_ID
	FROM [PAS_IMPL].[UL_RISK_FUND_GROUP]
GO