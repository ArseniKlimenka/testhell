-- CREATE TABLE UL_GUARANTEE_DATES
CREATE TABLE [PAS_IMPL].[UL_GUARANTEE_DATES]
(
	[GUARANTEE_DATES_ID] [UNIQUEIDENTIFIER],
	[OBSERVATION_NUMBER] [INT],
	[BARRIER_NAME] [NVARCHAR](255),
	CONSTRAINT [PK_UL_GUARANTEE_DATES]
PRIMARY KEY CLUSTERED ([GUARANTEE_DATES_ID] ASC)
)
GO

-- CREATE HISTORY TABLE
CREATE TABLE [PAS_IMPL].[UL_GUARANTEE_DATES_HISTORY]
(
	[GUARANTEE_DATES_HISTORY_ID] [UNIQUEIDENTIFIER],
	[GUARANTEE_DATES_ID] [UNIQUEIDENTIFIER],
	[OBSERVATION_NUMBER] [INT],
	[BARRIER_NAME] [NVARCHAR](255),
	[OPERATION] [NVARCHAR](1),
	CONSTRAINT [PK_UL_GUARANTEE_DATES_HISTORY]
PRIMARY KEY CLUSTERED ([GUARANTEE_DATES_HISTORY_ID] ASC)
)
GO

-- CREATE TRIGGER
CREATE TRIGGER [PAS_IMPL].[UL_GUARANTEE_DATES_HISTORY_TRIGGER]
ON [PAS_IMPL].[UL_GUARANTEE_DATES]
AFTER INSERT, UPDATE, DELETE
AS  
BEGIN
	DECLARE @operation NVARCHAR(1)
	IF EXISTS(SELECT *
	FROM inserted)
	  IF EXISTS(SELECT *
	FROM deleted)
	    SELECT @operation = 'U'
	ELSE
	    SELECT @operation = 'I'
	ELSE
		IF EXISTS(SELECT *
	FROM deleted)
    SELECT @operation = 'D'

	DECLARE @guaranteeDatesId UNIQUEIDENTIFIER;
	DECLARE @observationNumber INT;
	DECLARE @barrierName NVARCHAR(255);

	IF @operation != 'D'
	
		SELECT @guaranteeDatesId = GUARANTEE_DATES_ID, @observationNumber = OBSERVATION_NUMBER, @barrierName = BARRIER_NAME
	FROM inserted
	ELSE 
		SELECT @guaranteeDatesId = GUARANTEE_DATES_ID, @observationNumber = OBSERVATION_NUMBER, @barrierName = BARRIER_NAME
	FROM deleted

	INSERT INTO PAS_IMPL.UL_GUARANTEE_DATES_HISTORY
		(GUARANTEE_DATES_HISTORY_ID, GUARANTEE_DATES_ID, OBSERVATION_NUMBER, BARRIER_NAME, OPERATION)
	VALUES
		(NEWID(), @guaranteeDatesId, @observationNumber, @barrierName, @operation)
END

SET QUOTED_IDENTIFIER ON
GO

-- CREATE VIEW
CREATE VIEW [PAS_IMPL].[UL_GUARANTEE_DATES_VIEW]
AS
	SELECT
		[GUARANTEE_DATES_ID] AS GUARANTEE_DATES_ID,
		[OBSERVATION_NUMBER] AS OBSERVATION_NUMBER,
		[BARRIER_NAME] AS BARRIER_NAME
	FROM [PAS_IMPL].[UL_GUARANTEE_DATES]
GO