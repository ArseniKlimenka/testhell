-- CREATE TABLE UL_TOOLS
CREATE TABLE [PAS_IMPL].[UL_TOOLS]
(
	[TOOL_ID] [UNIQUEIDENTIFIER],
	[TOOL_NAME] [NVARCHAR](255),
	[STOCK_TICKER] [NVARCHAR](255),
	[ISIN] [NVARCHAR](255),
	[TARIFF_RATE_CURRENCY] [NVARCHAR](255),
	[STOCK_NAME] [NVARCHAR](255),
	[MIC] [NVARCHAR](255),
	[ADDITIONAL_INCOME] [NVARCHAR](255),
	[TOOL_TYPE] [NVARCHAR](255),
	[TICKER_BLOOMBERG] [NVARCHAR](255),
	[NUMBER_CBONDS] [NVARCHAR](255),
	[COUPON_RATE] [DECIMAL](15,6),
	[REPAYMENT_DATE] [DATE],
	[EMITENT] [NVARCHAR](255)
		CONSTRAINT [PK_UL_TOOLS]
PRIMARY KEY CLUSTERED ([TOOL_ID] ASC)
)
GO

ALTER TABLE [PAS_IMPL].[UL_TOOLS]  WITH CHECK ADD  CONSTRAINT [FK_PAS_IMPL_UL_TOOLS_MIC] FOREIGN KEY([MIC])
REFERENCES [PAS_IMPL].[UL_STOCKS] ([MIC])
GO


-- CREATE HISTORY TABLE
CREATE TABLE [PAS_IMPL].[UL_TOOLS_HISTORY]
(
	[TOOL_HISTORY_ID] [UNIQUEIDENTIFIER],
	[TOOL_ID] [UNIQUEIDENTIFIER],
	[TOOL_NAME] [NVARCHAR](255),
	[STOCK_TICKER] [NVARCHAR](255),
	[ISIN] [NVARCHAR](255),
	[TARIFF_RATE_CURRENCY] [NVARCHAR](255),
	[STOCK_NAME] [NVARCHAR](255),
	[MIC] [NVARCHAR](255),
	[ADDITIONAL_INCOME] [NVARCHAR](255),
	[TOOL_TYPE] [NVARCHAR](255),
	[TICKER_BLOOMBERG] [NVARCHAR](255),
	[NUMBER_CBONDS] [NVARCHAR](255),
	[COUPON_RATE] [DECIMAL](15,6),
	[REPAYMENT_DATE] [DATE],
	[EMITENT] [NVARCHAR](255),
	[OPERATION] [NVARCHAR](1),
	CONSTRAINT [PK_UL_TOOLS_HISTORY]
PRIMARY KEY CLUSTERED ([TOOL_HISTORY_ID] ASC)
)
GO

-- CREATE TRIGGER
CREATE TRIGGER [PAS_IMPL].[UL_TOOLS_HISTORY_TRIGGER]
ON [PAS_IMPL].[UL_TOOLS]
AFTER INSERT, UPDATE, DELETE
AS
BEGIN
	DECLARE @operation NVARCHAR(1)
	IF EXISTS(SELECT *
	FROM inserted)
	  IF EXISTS(SELECT *
	FROM deleted)
	    SELECT @operation = 'U'
	ELSE
	    SELECT @operation = 'I'
	ELSE
		IF EXISTS(SELECT *
	FROM deleted)
    SELECT @operation = 'D'

	DECLARE @toolId UNIQUEIDENTIFIER;
	DECLARE @toolName NVARCHAR(255);
	DECLARE @stockTicker NVARCHAR(255);
	DECLARE @isin NVARCHAR(255);
	DECLARE @tariffRateCurrency NVARCHAR(255);
	DECLARE @stockName NVARCHAR(255);
	DECLARE @mic NVARCHAR(255);
	DECLARE @additionalIncome NVARCHAR(255);
	DECLARE @toolType NVARCHAR(255);
	DECLARE @tickerBloomberg NVARCHAR(255);
	DECLARE @numberCbonds NVARCHAR(255);
	DECLARE @couponRate DECIMAL(15,6);
	DECLARE @repaymentDate DATE;
	DECLARE @emitent NVARCHAR(255);

	IF @operation != 'D'

		SELECT @toolId = TOOL_ID, @toolName = TOOL_NAME, @stockTicker = STOCK_TICKER, @isin = ISIN, @tariffRateCurrency = TARIFF_RATE_CURRENCY, @stockName = STOCK_NAME, @mic = MIC, @additionalIncome = ADDITIONAL_INCOME, @toolType = TOOL_TYPE, @tickerBloomberg = TICKER_BLOOMBERG, @numberCbonds = NUMBER_CBONDS, @couponRate = COUPON_RATE, @repaymentDate = REPAYMENT_DATE, @emitent = EMITENT
	FROM inserted
	ELSE
		SELECT @toolId = TOOL_ID, @toolName = TOOL_NAME, @stockTicker = STOCK_TICKER, @isin = ISIN, @tariffRateCurrency = TARIFF_RATE_CURRENCY, @stockName = STOCK_NAME, @mic = MIC, @additionalIncome = ADDITIONAL_INCOME, @toolType = TOOL_TYPE, @tickerBloomberg = TICKER_BLOOMBERG, @numberCbonds = NUMBER_CBONDS, @couponRate = COUPON_RATE, @repaymentDate = REPAYMENT_DATE, @emitent = EMITENT
	FROM deleted

	INSERT INTO PAS_IMPL.UL_TOOLS_HISTORY
		(TOOL_HISTORY_ID, TOOL_ID, TOOL_NAME, STOCK_TICKER, ISIN, TARIFF_RATE_CURRENCY, STOCK_NAME, MIC, ADDITIONAL_INCOME, TOOL_TYPE, TICKER_BLOOMBERG, NUMBER_CBONDS, COUPON_RATE, REPAYMENT_DATE, EMITENT, OPERATION)
	VALUES
		(NEWID(), @toolId, @toolName, @stockTicker, @isin, @tariffRateCurrency, @stockName, @mic, @additionalIncome, @toolType, @tickerBloomberg, @numberCbonds, @couponRate, @repaymentDate, @emitent, @operation)
END

SET QUOTED_IDENTIFIER ON
GO

-- CREATE VIEW
CREATE VIEW [PAS_IMPL].[UL_TOOLS_VIEW]
AS
	SELECT
		[TOOL_ID] AS TOOL_ID,
		[TOOL_NAME] AS TOOL_NAME,
		[STOCK_TICKER] AS STOCK_TICKER,
		[ISIN] AS ISIN,
		[TARIFF_RATE_CURRENCY] AS TARIFF_RATE_CURRENCY,
		[STOCK_NAME] AS STOCK_NAME,
		[MIC] AS MIC,
		[ADDITIONAL_INCOME] AS ADDITIONAL_INCOME,
		[TOOL_TYPE] AS TOOL_TYPE,
		[TICKER_BLOOMBERG] AS TICKER_BLOOMBERG,
		[NUMBER_CBONDS] AS NUMBER_CBONDS,
		[COUPON_RATE] AS COUPON_RATE,
		[REPAYMENT_DATE] AS REPAYMENT_DATE,
		[EMITENT] AS EMITENT
	FROM [PAS_IMPL].[UL_TOOLS]
GO