-- CREATE TABLE UL_PAY_OFF
CREATE TABLE [PAS_IMPL].[UL_PAY_OFF]
(
	[PAY_OFF_ID] [UNIQUEIDENTIFIER],
	[PAY_OFF_TYPE] [NVARCHAR](255),
	[TERM] [INT],
	[STRIKE] [DECIMAL](15,6),
	[GUARAN_COUPON] [NVARCHAR](255),
	[ADDITIONAL_INCOME] [NVARCHAR](255),
	[BARRIER_TYPE_ID] [UNIQUEIDENTIFIER],
	[OBSERVATION_BARRIER_ID] [UNIQUEIDENTIFIER],
	[PROTECTION_TYPE][NVARCHAR](255),
	CONSTRAINT [PK_UL_PAY_OFF]
PRIMARY KEY CLUSTERED ([PAY_OFF_ID] ASC)
)
GO

ALTER TABLE [PAS_IMPL].[UL_PAY_OFF] WITH CHECK ADD CONSTRAINT [FK_PAS_IMPL_UL_PAY_OFF_BARRIER_TYPE_ID] FOREIGN KEY([BARRIER_TYPE_ID])
REFERENCES [PAS_IMPL].[UL_BARRIER_TYPE] ([BARRIER_TYPE_ID])
GO

ALTER TABLE [PAS_IMPL].[UL_PAY_OFF] WITH CHECK ADD CONSTRAINT [FK_PAS_IMPL_UL_PAY_OFF_OBSERVATION_BARRIER_ID] FOREIGN KEY([OBSERVATION_BARRIER_ID])
REFERENCES [PAS_IMPL].[UL_OBSERVATION_BARRIER] ([OBSERVATION_BARRIER_ID])
GO

-- CREATE HISTORY TABLE
CREATE TABLE [PAS_IMPL].[UL_PAY_OFF_HISTORY]
(
	[PAY_OFF_HISTORY_ID] [UNIQUEIDENTIFIER],
	[PAY_OFF_ID] [UNIQUEIDENTIFIER],
	[PAY_OFF_TYPE] [NVARCHAR](255),
	[TERM] [INT],
	[STRIKE] [DECIMAL](15,6),
	[GUARAN_COUPON] [NVARCHAR](255),
	[ADDITIONAL_INCOME] [NVARCHAR](255),
	[BARRIER_TYPE_ID] [UNIQUEIDENTIFIER],
	[OBSERVATION_BARRIER_ID] [UNIQUEIDENTIFIER],
	[PROTECTION_TYPE][NVARCHAR](255),
	[OPERATION] [NVARCHAR](1),
	CONSTRAINT [PK_UL_PAY_OFF_HISTORY]
PRIMARY KEY CLUSTERED ([PAY_OFF_HISTORY_ID] ASC)
)
GO

-- CREATE TRIGGER
CREATE TRIGGER [PAS_IMPL].[UL_PAY_OFF_HISTORY_TRIGGER]
ON [PAS_IMPL].[UL_PAY_OFF]
AFTER INSERT, UPDATE, DELETE
AS
BEGIN
	DECLARE @operation NVARCHAR(1)
	IF EXISTS(SELECT *
	FROM inserted)
	  IF EXISTS(SELECT *
	FROM deleted)
	    SELECT @operation = 'U'
	ELSE
	    SELECT @operation = 'I'
	ELSE
		IF EXISTS(SELECT *
	FROM deleted)
    SELECT @operation = 'D'

	DECLARE @payOffId UNIQUEIDENTIFIER;
	DECLARE @payOffType NVARCHAR(255);
	DECLARE @term INT;
	DECLARE @strike DECIMAL(15,6);
	DECLARE @guaranCoupon NVARCHAR(255);
	DECLARE @additionalIncome NVARCHAR(255);
	DECLARE @barrierTypeId UNIQUEIDENTIFIER;
	DECLARE @observationBarrierId UNIQUEIDENTIFIER;
	DECLARE @protectionType NVARCHAR(255);

	IF @operation != 'D'

		SELECT @payOffId = PAY_OFF_ID, @payOffType = PAY_OFF_TYPE, @term = TERM, @strike = STRIKE, @guaranCoupon = GUARAN_COUPON, @additionalIncome = ADDITIONAL_INCOME, @barrierTypeId = BARRIER_TYPE_ID, @observationBarrierId = OBSERVATION_BARRIER_ID, @protectionType = PROTECTION_TYPE
	FROM inserted
	ELSE
		SELECT @payOffId = PAY_OFF_ID, @payOffType = PAY_OFF_TYPE, @term = TERM, @strike = STRIKE, @guaranCoupon = GUARAN_COUPON, @additionalIncome = ADDITIONAL_INCOME, @barrierTypeId = BARRIER_TYPE_ID, @observationBarrierId = OBSERVATION_BARRIER_ID, @protectionType = PROTECTION_TYPE
	FROM deleted

	INSERT INTO PAS_IMPL.UL_PAY_OFF_HISTORY
		(PAY_OFF_HISTORY_ID, PAY_OFF_ID, PAY_OFF_TYPE, TERM, STRIKE, GUARAN_COUPON, ADDITIONAL_INCOME, BARRIER_TYPE_ID, OBSERVATION_BARRIER_ID, PROTECTION_TYPE, OPERATION)
	VALUES
		(NEWID(), @payOffId, @payOffType, @term, @strike, @guaranCoupon, @additionalIncome, @barrierTypeId , @observationBarrierId, @protectionType, @operation)
END

SET QUOTED_IDENTIFIER ON
GO

-- CREATE VIEW
CREATE VIEW [PAS_IMPL].[UL_PAY_OFF_VIEW]
AS
	SELECT
		[PAY_OFF_ID] AS PAY_OFF_ID,
		[PAY_OFF_TYPE] AS PAY_OFF_TYPE,
		[TERM] AS TERM,
		[STRIKE] AS STRIKE,
		[GUARAN_COUPON] AS GUARAN_COUPON,
		[ADDITIONAL_INCOME] AS ADDITIONAL_INCOME,
		[BARRIER_TYPE_ID] AS BARRIER_TYPE_ID,
		[OBSERVATION_BARRIER_ID] AS OBSERVATION_BARRIER_ID,
		[PROTECTION_TYPE] AS PROTECTION_TYPE
	FROM [PAS_IMPL].[UL_PAY_OFF]
GO