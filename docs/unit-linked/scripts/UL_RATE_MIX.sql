-- CREATE TABLE UL_RATE_MIX
CREATE TABLE [PAS_IMPL].[UL_RATE_MIX]
(
	[RATE_MIX_ID] [UNIQUEIDENTIFIER],
	[RATE_ID] [UNIQUEIDENTIFIER],
	[RATE_SHARE] [DECIMAL](15,6)
	CONSTRAINT [PK_UL_RATE_MIX]
PRIMARY KEY CLUSTERED ([RATE_MIX_ID] ASC)
)
GO

ALTER TABLE [PAS_IMPL].[UL_RATE_MIX]  WITH CHECK ADD  CONSTRAINT [FK_PAS_IMPL_UL_RATE_MIX_RATE_ID] FOREIGN KEY([RATE_ID])
REFERENCES [PAS_IMPL].[UL_RATES] ([RATE_ID])
GO

-- CREATE HISTORY TABLE
CREATE TABLE [PAS_IMPL].[UL_RATE_MIX_HISTORY]
(
	[RATE_MIX_HISTORY_ID] [UNIQUEIDENTIFIER],
	[RATE_MIX_ID] [UNIQUEIDENTIFIER],
	[RATE_ID] [UNIQUEIDENTIFIER],
	[RATE_SHARE] [DECIMAL](15,6),
	[OPERATION] [NVARCHAR](1),
	CONSTRAINT [PK_UL_RATE_MIX_HISTORY]
PRIMARY KEY CLUSTERED ([RATE_MIX_HISTORY_ID] ASC)
)
GO

-- CREATE TRIGGER
CREATE TRIGGER [PAS_IMPL].[UL_RATE_MIX_HISTORY_TRIGGER]
ON [PAS_IMPL].[UL_RATE_MIX]
AFTER INSERT, UPDATE, DELETE
AS  
BEGIN
	DECLARE @operation NVARCHAR(1)
	IF EXISTS(SELECT *
	FROM inserted)
	  IF EXISTS(SELECT *
	FROM deleted)
	    SELECT @operation = 'U'
	ELSE
	    SELECT @operation = 'I'
	ELSE
		IF EXISTS(SELECT *
	FROM deleted)
    SELECT @operation = 'D'

	DECLARE @rateMixID UNIQUEIDENTIFIER;
	DECLARE @rateID UNIQUEIDENTIFIER;
	DECLARE @rateShare DECIMAL(15,6);
	
	IF @operation != 'D'
	
		SELECT @rateMixID = RATE_MIX_ID, @rateID=RATE_ID, @rateShare = RATE_SHARE
		FROM inserted
	ELSE 
		SELECT @rateMixID = RATE_MIX_ID, @rateID=RATE_ID, @rateShare = RATE_SHARE
		FROM deleted
	
	INSERT INTO PAS_IMPL.UL_RATE_MIX_HISTORY
		(RATE_MIX_HISTORY_ID, RATE_MIX_ID, RATE_ID, RATE_SHARE, OPERATION)
	VALUES
		(NEWID(), @rateMixID, @rateID, @rateShare, @operation)
END

SET QUOTED_IDENTIFIER ON
GO

-- CREATE VIEW
CREATE VIEW [PAS_IMPL].[UL_RATE_MIX_VIEW]
AS
	SELECT
		[RATE_MIX_ID] AS RATE_MIX_ID,
		[RATE_ID] AS RATE_ID,
		[RATE_SHARE] AS RATE_SHARE
	FROM [PAS_IMPL].[UL_RATE_MIX]
GO