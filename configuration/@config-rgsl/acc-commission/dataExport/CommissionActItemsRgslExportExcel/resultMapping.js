const { translationUtils } = require('@adinsure/runtime');
const { toCalendarDate} = require('@config-rgsl/acc-base/lib/excelExportUtils');

module.exports = function resultMapping(input) {

    const result = input.data.map(item => ({
        actItemId: item.resultData.actItemId || '',
        statusId: translationUtils.getTranslation('dataSource/CommissionActItemRgslDataSource/1', 'enum', 'actItemStatusComponent', item.resultData.statusId?.toString() ?? '', 'ActItemStatusComponent') || '',
        actStateCode: translationUtils.getTranslation('dataSource/CommissionActItemRgslDataSource/1', 'enum', 'actStateComponent', item.resultData.actStateCode?.toString() ?? '', 'ActStateComponent') || '',
        commissionType: translationUtils.getTranslation('dataSource/CommissionActItemRgslDataSource/1', 'enum', 'actTypeComponent', item.resultData.lcCommAmountExtra ? '2' : '1', 'ActTypeComponent') || '',
        reportingPeriodFrom: toCalendarDate(item.resultData.reportingPeriodFrom) || '',
        reportingPeriodTo: toCalendarDate(item.resultData.reportingPeriodTo) || '',
        issueDate: toCalendarDate(item.resultData.issueDate) || '',
        actNo: item.resultData.actNo || '',
        agentAgreementNumber: item.resultData.agentAgreementNumber || '',
        aaExternalNumber: item.resultData.aaExternalNumber || '',
        agentName: item.resultData.agentName || '',
        referenceNo: item.resultData.referenceNo || '',
        stateCodeDescription: item.resultData.stateCodeDescription || '',
        polHolderName: item.resultData.polHolderName || '',
        productCode: item.resultData.productCode || '',
        productDesc: item.resultData.productDesc || '',
        creditProgramVersion: item.resultData.creditProgramVersion || '',
        sourceLineId: item.resultData.sourceLineId || '',
        insuredYearsCount: item.resultData.insuredYearsCount || '',
        paymentPeriod: item.resultData.paymentPeriod || '',
        insuranceYear: item.resultData.insuranceYear || '',
        polStartDate: toCalendarDate(item.resultData.polStartDate) || '',
        polEndDate: toCalendarDate(item.resultData.polEndDate) || '',
        riskPremiumYear: item.resultData.riskPremiumYear || '',
        paymentFrequencyCode: translationUtils.getTranslation('dataSource/CommissionActItemRgslDataSource/1', 'enum', 'paymentFrequencyCode', item.resultData.paymentFrequencyCode?.toString() ?? '', 'PaymentFrequencyCode') || '',
        riskPremium: item.resultData.riskPremium || '',
        paymentFrequency2Code: translationUtils.getTranslation('dataSource/CommissionActItemRgslDataSource/1', 'enum', 'paymentFrequency2Code', item.resultData.paymentFrequency2Code?.toString() ?? '', 'PaymentFrequency2Code') || '',
        docCurrencyCode: item.resultData.docCurrencyCode || '',
        installmentType: translationUtils.getTranslation('dataSource/CommissionActItemRgslDataSource/1', 'enum', 'installmentTypeComponent', item.resultData.installmentType?.toString() ?? '', 'InstallmentTypeComponent') || '',
        paymentTransactionDate: toCalendarDate(item.resultData.paymentTransactionDate) || '',
        paymentLcAmount: item.resultData.paymentLcAmount || '',
        dueDate: toCalendarDate(item.resultData.dueDate) || '',
        aaDocCommRate: item.resultData.aaDocCommRate || '',
        aaDocCommLcAmountCalc: item.resultData.aaDocCommLcAmountCalc || '',
        commRateManual: item.resultData.commRateManual || '',
        lcCommAmountManual: item.resultData.lcCommAmountManual || '',
        lcCommAmountExtra: item.resultData.lcCommAmountExtra || '',
        lcCommAmountFinal: item.resultData.lcCommAmountFinal || '',
        isManualRate: item.resultData.isManualRate || '',
        vatLc: item.resultData.vatLc || '',
        invCommRate: item.resultData.invCommRate || '',
        invCommLcAmount: item.resultData.invCommLcAmount || '',
        salesChannelDescription: item.resultData.salesChannelDescription || '',
        aaPartyType: translationUtils.getTranslation('dataSource/CommissionActItemRgslDataSource/1', 'enum', 'PartyType', item.resultData.aaPartyType?.toString() ?? '', 'PartyType') || '',
        agentTabNumber: item.resultData.agentTabNumber || '',
        mvzNumber: item.resultData.mvzNumber || '',
        aaOrganisationUnitName: item.resultData.aaOrganisationUnitName || '',
        aaAgencyDescription: item.resultData.aaAgencyDescription || '',
        verificationState: item.resultData.verificationState || '',
        businessLine: item.resultData.businessLine || '',
        policyCreatedDate: toCalendarDate(item.resultData.policyCreatedDate) || '',
        signedContractAttachmentLoadDate: toCalendarDate(item.resultData.signedContractAttachmentLoadDate) || '',
        cancellationIssueDate: toCalendarDate(item.resultData.cancellationIssueDate) || '',
        cancellationCreatedOn: toCalendarDate(item.resultData.cancellationCreatedOn) || '',
        expensesRate: item.resultData.expensesRate || '',
        expensesAmount: item.resultData.expensesAmount || '',
        naturalPersonRate: item.resultData.naturalPersonRate || '',
        naturalPersonAmount: item.resultData.naturalPersonAmount || '',
        solePropriatorRate: item.resultData.solePropriatorRate || '',
        solePropriatorAmount: item.resultData.solePropriatorAmount || '',
        subAgentSadNumber: item.resultData.subAgentSadNumber || '',
        subAgentType: item.resultData.subAgentType || '',
        subAgentBranchName: item.resultData.subAgentBranchName || '',
        subAgentBranchRegion: item.resultData.subAgentBranchRegion || '',
        productGroup: translationUtils.getTranslation('dataSource/CommissionActItemRgslDataSource/1', 'enum', 'productGroup', item.resultData.productGroup?.toString() ?? '', 'ProductGroup') || '',
        initiatorOrgunitCode: item.resultData.initiatorOrgunitCode || '',
        actNotes: item.resultData.actNotes || '',
        hasNoChanges: item.resultData.hasNoChanges ? translationUtils.getTranslation('dataSource/CommissionActItemRgslDataSource/1', 'enum', 'actHasNoChangesComponent', item.resultData.hasNoChanges, 'ActHasNoChangesComponent') : '',
        amendmentReason: item.resultData.amendmentReason ? translationUtils.getTranslation('dataSource/CommissionActItemRgslDataSource/1', 'enum', 'amendmentReason', item.resultData.amendmentReason, 'AmendmentReason') : '',
        subAgentProportion: item.resultData.subAgentProportion ?? '',
        subAgentSplitShare: item.resultData.subAgentSplitShare ?? '',
        subAgentSplitAmount: item.resultData.subAgentSplitAmount ?? '',
        manualRule: item.resultData.manualRule ?? ''
    }));

    return result;
};
