select
	alc.ALLOCATION_ID,
	alc.DOCUMENT_TYPE_ID,
	alc.CREATE_DATE as ALLOCATION_DATE,
	alc.CANCELLED,
	case
		when alc.DOCUMENT_TYPE_ID = 1 then 'Contract'
		when alc.DOCUMENT_TYPE_ID in (2, 3) then 'PaymentOrder'
		when alc.DOCUMENT_TYPE_ID = 4 then 'ImportDocument'
		else null
	end as ENTITY_TYPE,
	case
		when alc.DOCUMENT_TYPE_ID = 1 then art.CODE_NAME
		when alc.DOCUMENT_TYPE_ID in (2, 3) then 'PaymentOrder'
		when alc.DOCUMENT_TYPE_ID = 4 then 'AggregatedPaymentRegisterImport'
		else null
	end as CONFIGURATION_NAME,
	alc.DOCUMENT_NO,
	polsl.START_DATE as POLICY_START_DATE,
	alcp.DUE_DATE,
	amounts.AMOUNT as INSTALLMENT_AMOUNT,
	amounts.OPEN_AMOUNT as INSTALLMENT_OPEN_AMOUNT,
	case
		when amounts.OPEN_AMOUNT = 0 then 'paid'
		when amounts.OPEN_AMOUNT != 0 then 'partially_paid'
		else null
	end as INSTALLMENT_STATUS,
	bsi.STATUS_ID as PAY_STATUS_ID,
	prod.DESCRIPTION as PRODUCT_DESC,
	polsl.HOLDER_NAME as POLICY_HOLDER_NAME,
	bsi.AMOUNT as PAYMENT_AMOUNT,
	bsi.OPEN_AMOUNT as PAYMENT_OPEN_AMOUNT,
	bsi.TRANSACTION_DATE,
	bsi.PAYMENT_DATE,
	alc.PAY_AMOUNT,
	alc.PAY_RATE,
	alc.DOC_AMOUNT,
	alc.DOC_RATE,
	alcp.EXCHANGE_DIFFERENCE,
	bsi.CURRENCY_CODE as PAY_CURRENCY_CODE,
	case when alc.TOLERANCE_DOC_AMOUNT < 0 then -alc.TOLERANCE_DOC_AMOUNT end as TOLERANCE_OVERPAYMENT,
	case when alc.TOLERANCE_DOC_AMOUNT > 0 then  alc.TOLERANCE_DOC_AMOUNT end as TOLERANCE_UNDERPAYMENT,
	bsi.DEBTOR_NAME as PAYER_NAME,
	bsi.BANK_STATEMENT_ITEM_ID,
	bsi.BANK_STATEMENT_ITEM_NO,
	bsi.PAYMENT_DESCRIPTION,
	bsi.FAKE,
	bsi.IS_MIGRATED,
    bsi.PAYMENT_SOURCE_ID
from
	ACC_IMPL.ALLOCATION alc
	inner join ACC_IMPL.BANK_STATEMENT_ITEM bsi on bsi.BANK_STATEMENT_ITEM_ID = alc.BANK_STATEMENT_ITEM_ID
	left join ACC_IMPL.ALLOCATION_POLICY alcp on alcp.ALLOCATION_ID = alc.ALLOCATION_ID
	left join
	(
		select
			CONTRACT_NUMBER,
			DUE_DATE,
			sum(AMOUNT) as AMOUNT,
			sum(OPEN_AMOUNT) as OPEN_AMOUNT
		from
		(
			select
				polh.CONTRACT_NUMBER,
				ppl.DUE_DATE,
				ppsl.AMOUNT,
				ppsl.AMOUNT as OPEN_AMOUNT
			from
				pas_impl.POLICY_HUB polh
				inner join pas_impl.P_PAYMENT_PLAN_LINK ppl on ppl.POLICY_HKEY = polh.POLICY_HKEY
				inner join pas_impl.P_PAYMENT_PLAN_SAT_LATEST ppsl on ppsl.P_PAYMENT_PLAN_HKEY = ppl.P_PAYMENT_PLAN_HKEY
			union all
			select
				alc.DOCUMENT_NO as CONTRACT_NUMBER,
				alcp.DUE_DATE,
				0 as AMOUNT,
				-(alc.DOC_AMOUNT + alc.TOLERANCE_DOC_AMOUNT) as OPEN_AMOUNT
			from
				acc_impl.ALLOCATION alc
				inner join acc_impl.ALLOCATION_POLICY alcp on alcp.ALLOCATION_ID = alc.ALLOCATION_ID
		) t
		group by CONTRACT_NUMBER, DUE_DATE
	) amounts on amounts.CONTRACT_NUMBER = alc.DOCUMENT_NO and amounts.DUE_DATE = alcp.DUE_DATE
	left join PAS.CONTRACT contr on contr.CONTRACT_NUMBER = alc.DOCUMENT_NO
	left join CFX.PUBLISHED_ARTIFACT art on art.PUBLISHED_ARTIFACT_ID = contr.PUBLISHED_ARTIFACT_ID
{{#if parameters.payerCode}}
	inner join PTY_IMPL.PARTY_INFO_SAT_LATEST ptyisl on ptyisl.FULL_NAME = bsi.DEBTOR_NAME
	inner join PTY_IMPL.PARTY_HUB ptyh on ptyh.PARTY_HKEY = ptyisl.PARTY_INFO_HKEY and ptyh.PARTY_CODE = @payerCode
{{/if}}
	left join pas_impl.POLICY_HUB polh on polh.CONTRACT_NUMBER = alc.DOCUMENT_NO
	left join pas_impl.POLICY_SAT_LATEST polsl on polsl.POLICY_HKEY = polh.POLICY_HKEY
	left join BFX_IMPL.PRODUCTS prod on prod.code = polsl.PRODUCT_CODE
where 1=1
{{#unless parameters.fetchCancellations}}
	and alc.CANCELLED = 0
	and alc.CANCELLED_ALLOCATION_ID is null
{{/unless}}
{{#if parameters.refDocumentNo}}
	and alc.DOCUMENT_NO = @refDocumentNo
{{/if}}
{{#if parameters.documentTypeId}}
	and alc.DOCUMENT_TYPE_ID = @documentTypeId
{{/if}}
{{#if parameters.payerName}}
	and bsi.debtor_name = @payerName
{{/if}}
{{#if parameters.policyHolderCode}}
	and polsl.holder_code = @policyHolderCode
{{/if}}
{{#if parameters.paymentDateFrom}}
	and bsi.payment_date >= @paymentDateFrom
{{/if}}
{{#if parameters.paymentDateTo}}
	and bsi.payment_date <= @paymentDateTo
{{/if}}
{{#if parameters.policyStartDateFrom}}
	and polsl.START_DATE >= @policyStartDateFrom
{{/if}}
{{#if parameters.policyStartDateTo}}
	and polsl.START_DATE <= @policyStartDateTo
{{/if}}
{{#if parameters.transactionDateFrom}}
	and bsi.transaction_date >= @transactionDateFrom
{{/if}}
{{#if parameters.transactionDateTo}}
	and bsi.transaction_date <= @transactionDateTo
{{/if}}
{{#if parameters.payAmountFrom}}
	and alc.pay_amount >= @payAmountFrom
{{/if}}
{{#if parameters.payAmountTo}}
	and alc.pay_amount <= @payAmountTo
{{/if}}
{{#if parameters.currencyCode}}
	and alc.doc_currency_code = @currencyCode
{{/if}}
{{#if parameters.bankStatementItemNo}}
	and bsi.bank_statement_item_no = @bankStatementItemNo
{{/if}}
{{#if parameters.bankStatementItemId}}
	and bsi.bank_statement_item_id = @bankStatementItemId
{{/if}}
{{#if parameters.bankStatementItemIds}}
	and bsi.bank_statement_item_id in (@bankStatementItemIds)
{{/if}}
{{#if parameters.bankStatementItemSourceIds}}
	and bsi.PAYMENT_SOURCE_ID in (@bankStatementItemSourceIds)
{{/if}}
{{#if parameters.productCode}}
	and polsl.PRODUCT_CODE = @productCode
{{/if}}
{{#if parameters.paymentCancellationId}}
	and alc.ALLOCATION_ID in (
		select ALLOCATION_ID
		from
			acc_impl.PAYMENT_CANCELLATION_ITEM_HUB pcih
			inner join acc_impl.PAYMENT_CANCELLATION_ALLOCATION_LINK pcal on pcal.PAYMENT_CANCELLATION_ITEM_HKEY = pcih.PAYMENT_CANCELLATION_ITEM_HKEY
		where 1=1
			and IMPORT_DOCUMENT_ID = @paymentCancellationId
	)
{{/if}}
{{#if parameters.allocationIds}}
	and alc.ALLOCATION_ID in (@allocationIds)
{{/if}}
{{#if parameters.paymentPlanDateFrom}}
    and alcp.DUE_DATE >= @paymentPlanDateFrom
{{/if}}
{{#if parameters.paymentPlanDateTo}}
    and alcp.DUE_DATE <= @paymentPlanDateTo
{{/if}}