WITH CONTRACT_DATA_FOR_AUTOCONVERSION AS (
	SELECT 
		c.CONTRACT_NUMBER,
		c.STATE_ID,
		ac.TERM_IN_DAYS
	FROM 
		PAS.CONTRACT c
		JOIN PAS_IMPL.POLICY_HUB ph ON ph.CONTRACT_NUMBER = c.CONTRACT_NUMBER
		JOIN PAS_IMPL.POLICY_SAT_LATEST ps ON ps.POLICY_HKEY = ph.POLICY_HKEY
		JOIN BFX_IMPL.AUTOCONVERSION_CONFIGURATION ac ON ac.PRODUCT_CODE = ps.PRODUCT_CODE
),

INSTALLMENT_DATA_FOR_AUTOCONVERSION AS (
	SELECT
		idfa.DUE_DATE,
		idfa.CONTRACT_NO,
		idfa.CURRENCY_CODE,
		idfa.OPEN_AMOUNT,
		idfa.TERM_IN_DAYS
	FROM (
		SELECT
			ppl.DUE_DATE,
			polh.CONTRACT_NUMBER AS CONTRACT_NO,
			ppsl.CURRENCY_CODE,
			ppsl.AMOUNT AS OPEN_AMOUNT,
			c.TERM_IN_DAYS
		FROM
			pas_impl.POLICY_HUB polh
			INNER JOIN CONTRACT_DATA_FOR_AUTOCONVERSION c ON polh.CONTRACT_NUMBER = c.CONTRACT_NUMBER
			INNER JOIN CFG.PROCESS_STATE st on st.PROCESS_STATE_ID = c.STATE_ID
			INNER JOIN pas_impl.P_PAYMENT_PLAN_LINK ppl ON ppl.POLICY_HKEY = polh.POLICY_HKEY
			INNER JOIN pas_impl.P_PAYMENT_PLAN_SAT_LATEST ppsl ON ppsl.P_PAYMENT_PLAN_HKEY = ppl.P_PAYMENT_PLAN_HKEY
		WHERE
			st.CODE_NAME = 'Activated'
		UNION ALL
		SELECT
			palc.DUE_DATE,
			alc.DOCUMENT_NO AS CONTRACT_NO,
			alc.DOC_CURRENCY_CODE AS CURRENCY_CODE,
			-(mat.DOC_AMOUNT + mat.TOLERANCE_DOC_AMOUNT) AS OPEN_AMOUNT,
			c.TERM_IN_DAYS
		FROM
			ACC_IMPL.ALLOCATION alc
			INNER JOIN CONTRACT_DATA_FOR_AUTOCONVERSION c ON alc.DOCUMENT_NO = c.CONTRACT_NUMBER
			INNER JOIN CFG.PROCESS_STATE st on st.PROCESS_STATE_ID = c.STATE_ID
			INNER JOIN acc_impl.BANK_STATEMENT_ITEM bsi ON bsi.BANK_STATEMENT_ITEM_ID = alc.BANK_STATEMENT_ITEM_ID
			INNER JOIN ACC_IMPL.ALLOCATION_POLICY palc ON palc.ALLOCATION_ID = alc.ALLOCATION_ID
			INNER JOIN ACC_IMPL.MATCHING mat ON mat.ALLOCATION_ID = alc.ALLOCATION_ID
		WHERE
			bsi.PAYMENT_SOURCE_ID != 4
			AND st.CODE_NAME = 'Activated'
	) idfa
)


SELECT
	CONTRACT_NO,
	MAX(DUE_DATE) AS UNPAID_PERIOD_DATE
FROM (
	-- select contracts which have unpaid last period 
	SELECT
		idfa.DUE_DATE,
		idfa.CONTRACT_NO,
		idfa.CURRENCY_CODE,
		idfa.TERM_IN_DAYS
	FROM
		INSTALLMENT_DATA_FOR_AUTOCONVERSION idfa
		JOIN (
		-- select contracts with at least one paid period
			SELECT
				pc_idfa.CONTRACT_NO
			FROM 
				INSTALLMENT_DATA_FOR_AUTOCONVERSION pc_idfa
			GROUP BY
				pc_idfa.DUE_DATE,
				pc_idfa.CONTRACT_NO,
				pc_idfa.CURRENCY_CODE
			HAVING
				SUM(pc_idfa.OPEN_AMOUNT) <= 0
		) paid_contract ON paid_contract.CONTRACT_NO = idfa.CONTRACT_NO
	GROUP BY
		idfa.DUE_DATE,
		idfa.CONTRACT_NO,
		idfa.CURRENCY_CODE,
		idfa.TERM_IN_DAYS
	HAVING
		SUM(idfa.OPEN_AMOUNT) > 0
		AND idfa.DUE_DATE < GETDATE() - idfa.TERM_IN_DAYS
	) unpaid_contracts
GROUP BY
	CONTRACT_NO
