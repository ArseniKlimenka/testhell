{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "additionalProperties": false,
    "properties": {
        "criteria": {
            "type": "object",
            "properties": {
                "selectedUserGroup": {
                    "type": "object"
                },
                "selectedUser": {
                    "type": "object"
                },
                "dateFrom": {
                    "type": "string",
                    "aiFormat": "date"
                },
                "dateTo": {
                    "type": "string",
                    "aiFormat": "date"
                }
            }
        },
        "groupUsersExceptions": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "applicationUserId": {
                        "type": "string"
                    },
                    "applicationUserDisplayName": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "aiTitle": "Rule description",
                        "description": "Rule description"
                    },
                    "sourceCalendarCode": {
                        "type": "string",
                        "aiTitle": "Source calendar",
                        "description": "From which calendar was rule inherited"
                    },
                    "isWork": {
                        "type": "boolean",
                        "aiTitle": "Workday",
                        "description": "TRUE if user is that time on work. FALSE if user is that time out of work"
                    },
                    "dateFrom": {
                        "type": "string",
                        "aiTitle": "Date from",
                        "aiFormat": "date",
                        "description": "From which date rule is valid from"
                    },
                    "dateTo": {
                        "type": "string",
                        "aiTitle": "Date to",
                        "aiFormat": "date",
                        "description": "To which date rule is valid to"
                    },
                    "timeFrom": {
                        "type": "string",
                        "aiTitle": "Time from",
                        "description": "From what time on inside date interval is rule valid"
                    },
                    "timeTo": {
                        "type": "string",
                        "aiTitle": "Time to",
                        "description": "To what time inside date interval is rule valid"
                    },
                    "capacity": {
                        "type": "number",
                        "aiTitle": "Capacity",
                        "description": "Duration of the work in hours"
                    },
                    "repetition": {
                        "type": "object",
                        "properties": {
                            "pattern": {
                                "type": "string",
                                "aiTitle": "Repeat pattern",
                                "description": "Pattern of repetition of the rule",
                                "enum": [
                                    "daily",
                                    "weekly",
                                    "yearly"
                                ],
                                "ai-enum-descriptions": {
                                    "daily": "RepetitionPattern@daily",
                                    "weekly": "RepetitionPattern@weekly",
                                    "yearly": "RepetitionPattern@yearly"
                                }
                            },
                            "dayOfWeek": {
                                "type": "string",
                                "aiTitle": "Day of week",
                                "description": "Is used in combination with pattern weekly to specify day of the week",
                                "enum": [
                                    "monday",
                                    "tuesday",
                                    "wednesday",
                                    "thursday",
                                    "friday",
                                    "saturday",
                                    "sunday"
                                ],
                                "ai-enum-descriptions": {
                                    "monday": "DayOfWeek@monday",
                                    "tuesday": "DayOfWeek@tuesday",
                                    "wednesday": "DayOfWeek@wednesday",
                                    "thursday": "DayOfWeek@thursday",
                                    "friday": "DayOfWeek@friday",
                                    "saturday": "DayOfWeek@saturday",
                                    "sunday": "DayOfWeek@sunday"
                                }
                            },
                            "eventDate": {
                                "type": "string",
                                "aiFormat": "date",
                                "aiTitle": "Event date",
                                "description": "Date of the event related for example to yearly pattern"
                            }
                        }
                    }
                }
            }
        },
        "groupUsersSubstitutes": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "applicationUserId": {
                        "type": "string"
                    },
                    "applicationUserDisplayName": {
                        "type": "string"
                    },
                    "userGroupId": {
                        "type": "string"
                    },
                    "userGroupCode": {
                        "type": "string"
                    },
                    "userGroupName": {
                        "type": "string"
                    },
                    "substituteUserId": {
                        "type": "string"
                    },
                    "substituteUserDisplayName": {
                        "type": "string"
                    }
                }
            }
        }
    }
}