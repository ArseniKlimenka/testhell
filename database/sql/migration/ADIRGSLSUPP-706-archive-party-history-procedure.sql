IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ARCHIVE_PARTY_HISTORY]') AND type IN (N'P', N'RF', N'PC'))
BEGIN
DROP PROCEDURE dbo.ARCHIVE_PARTY_HISTORY;
END
GO

CREATE PROCEDURE ARCHIVE_PARTY_HISTORY
AS
BEGIN TRY
begin tran

	INSERT INTO PTY_IMPL.PARTY_HISTORY_ARCH
	SELECT ptyHist.* FROM pty.PARTY_HISTORY ptyHist
	INNER JOIN (
		SELECT PARTY_ID, MAX(SYS_VERSION) MAX_SYS_VERSION
		FROM pty.PARTY_HISTORY
		GROUP BY PARTY_ID
	) ptyHistIn ON ptyHistIn.PARTY_ID = ptyHist.PARTY_ID AND ptyHist.SYS_VERSION != ptyHistIn.MAX_SYS_VERSION

    DELETE FROM PTY.PARTY_HISTORY
	WHERE PARTY_HISTORY_ID IN (
		SELECT ptyHist.PARTY_HISTORY_ID FROM pty.PARTY_HISTORY ptyHist
		INNER JOIN (
			SELECT PARTY_ID, MAX(SYS_VERSION) MAX_SYS_VERSION
			FROM pty.PARTY_HISTORY
			GROUP BY PARTY_ID
		) ptyHistIn ON ptyHistIn.PARTY_ID = ptyHist.PARTY_ID AND ptyHist.SYS_VERSION != ptyHistIn.MAX_SYS_VERSION
	);

commit tran
END TRY
BEGIN CATCH
    ROLLBACK tran
    DECLARE @ErrorMessage NVARCHAR(4000); DECLARE @ErrorSeverity INT; DECLARE @ErrorState INT;
    SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = 1;
    RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState );
END CATCH;
GO