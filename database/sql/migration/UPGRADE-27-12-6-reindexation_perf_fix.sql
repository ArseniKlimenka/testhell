-- ACC.NETTING_PROPOSAL
IF NOT EXISTS (SELECT NAME FROM SYS.indexes WHERE NAME = 'IX_ACC_NETTING_PROPOSAL_SYS_UPDATED_ON')
BEGIN
    CREATE INDEX IX_ACC_NETTING_PROPOSAL_SYS_UPDATED_ON ON ACC.NETTING_PROPOSAL (SYS_UPDATED_ON);
END

-- ACC.PAYMENT_ORDER
IF NOT EXISTS (SELECT NAME FROM SYS.indexes WHERE NAME = 'IX_ACC_PAYMENT_ORDER_SYS_UPDATED_ON')
BEGIN
    CREATE INDEX IX_ACC_PAYMENT_ORDER_SYS_UPDATED_ON ON ACC.PAYMENT_ORDER (SYS_UPDATED_ON);
END

-- ACC.PERIOD_CLOSING
IF NOT EXISTS (SELECT NAME FROM SYS.indexes WHERE NAME = 'IX_ACC_PERIOD_CLOSING_SYS_UPDATED_ON')
BEGIN
    CREATE INDEX IX_ACC_PERIOD_CLOSING_SYS_UPDATED_ON ON ACC.PERIOD_CLOSING (SYS_UPDATED_ON);
END

-- CLM.CATASTROPHIC_EVENT
IF NOT EXISTS (SELECT NAME FROM SYS.indexes WHERE NAME = 'IX_CLM_CATASTROPHIC_EVENT_SYS_UPDATED_ON')
BEGIN
    CREATE INDEX IX_CLM_CATASTROPHIC_EVENT_SYS_UPDATED_ON ON CLM.CATASTROPHIC_EVENT (SYS_UPDATED_ON);
END

-- CLM.CLAIM
IF NOT EXISTS (SELECT NAME FROM SYS.indexes WHERE NAME = 'IX_CLM_CLAIM_SYS_UPDATED_ON')
BEGIN
    CREATE INDEX IX_CLM_CLAIM_SYS_UPDATED_ON ON CLM.CLAIM (SYS_UPDATED_ON);
END

-- CLM.CLAIM_CALCULATION
IF NOT EXISTS (SELECT NAME FROM SYS.indexes WHERE NAME = 'IX_CLM_CLAIM_CALCULATION_SYS_UPDATED_ON')
BEGIN
    CREATE INDEX IX_CLM_CLAIM_CALCULATION_SYS_UPDATED_ON ON CLM.CLAIM_CALCULATION (SYS_UPDATED_ON);
END

-- CLM.CLAIM_EVENT
IF NOT EXISTS (SELECT NAME FROM SYS.indexes WHERE NAME = 'IX_CLM_CLAIM_EVENT_SYS_UPDATED_ON')
BEGIN
    CREATE INDEX IX_CLM_CLAIM_EVENT_SYS_UPDATED_ON ON CLM.CLAIM_EVENT (SYS_UPDATED_ON);
END

-- CLM.CLAIM_INSPECTION
IF NOT EXISTS (SELECT NAME FROM SYS.indexes WHERE NAME = 'IX_CLM_CLAIM_INSPECTION_SYS_UPDATED_ON')
BEGIN
    CREATE INDEX IX_CLM_CLAIM_INSPECTION_SYS_UPDATED_ON ON CLM.CLAIM_INSPECTION (SYS_UPDATED_ON);
END

-- CLM.COMPLAINT
IF NOT EXISTS (SELECT NAME FROM SYS.indexes WHERE NAME = 'IX_CLM_COMPLAINT_SYS_UPDATED_ON')
BEGIN
    CREATE INDEX IX_CLM_COMPLAINT_SYS_UPDATED_ON ON CLM.COMPLAINT (SYS_UPDATED_ON);
END

-- CLM.LEGAL_PROCEDURE
IF NOT EXISTS (SELECT NAME FROM SYS.indexes WHERE NAME = 'IX_CLM_LEGAL_PROCEDURE_SYS_UPDATED_ON')
BEGIN
    CREATE INDEX IX_CLM_LEGAL_PROCEDURE_SYS_UPDATED_ON ON CLM.LEGAL_PROCEDURE (SYS_UPDATED_ON);
END

-- CLM.RECOVERY
IF NOT EXISTS (SELECT NAME FROM SYS.indexes WHERE NAME = 'IX_CLM_RECOVERY_SYS_UPDATED_ON')
BEGIN
    CREATE INDEX IX_CLM_RECOVERY_SYS_UPDATED_ON ON CLM.RECOVERY (SYS_UPDATED_ON);
END

-- CLM.RECOVERY_CLAIM
IF NOT EXISTS (SELECT NAME FROM SYS.indexes WHERE NAME = 'IX_CLM_RECOVERY_CLAIM_SYS_UPDATED_ON')
BEGIN
    CREATE INDEX IX_CLM_RECOVERY_CLAIM_SYS_UPDATED_ON ON CLM.RECOVERY_CLAIM (SYS_UPDATED_ON);
END

-- CLM.SERVICE_CLAIM_REFUND
IF NOT EXISTS (SELECT NAME FROM SYS.indexes WHERE NAME = 'IX_CLM_SERVICE_CLAIM_REFUND_SYS_UPDATED_ON')
BEGIN
    CREATE INDEX IX_CLM_SERVICE_CLAIM_REFUND_SYS_UPDATED_ON ON CLM.SERVICE_CLAIM_REFUND (SYS_UPDATED_ON);
END

-- CLM.SERVICE_POLICY
IF NOT EXISTS (SELECT NAME FROM SYS.indexes WHERE NAME = 'IX_CLM_SERVICE_POLICY_SYS_UPDATED_ON')
BEGIN
    CREATE INDEX IX_CLM_SERVICE_POLICY_SYS_UPDATED_ON ON CLM.SERVICE_POLICY (SYS_UPDATED_ON);
END

-- BFX.ATTACHMENT_TYPE
IF NOT EXISTS (SELECT NAME FROM SYS.indexes WHERE NAME = 'IX_BFX_ATTACHMENT_TYPE_SYS_UPDATED_ON')
BEGIN
    CREATE INDEX IX_BFX_ATTACHMENT_TYPE_SYS_UPDATED_ON ON BFX.ATTACHMENT_TYPE (SYS_UPDATED_ON);
END

-- BFX.CODE_TABLE_ITEM
IF NOT EXISTS (SELECT NAME FROM SYS.indexes WHERE NAME = 'IX_BFX_CODE_TABLE_ITEM_SYS_UPDATED_ON')
BEGIN
    CREATE INDEX IX_BFX_CODE_TABLE_ITEM_SYS_UPDATED_ON ON BFX.CODE_TABLE_ITEM (SYS_UPDATED_ON);
END

-- BFX.CONSTRAINT_TYPE
IF NOT EXISTS (SELECT NAME FROM SYS.indexes WHERE NAME = 'IX_BFX_CONSTRAINT_TYPE_SYS_UPDATED_ON')
BEGIN
    CREATE INDEX IX_BFX_CONSTRAINT_TYPE_SYS_UPDATED_ON ON BFX.CONSTRAINT_TYPE (SYS_UPDATED_ON);
END

-- BFX.HIERARCHICAL_CODE_TABLE_ITEM
IF NOT EXISTS (SELECT NAME FROM SYS.indexes WHERE NAME = 'IX_BFX_HIERARCHICAL_CODE_TABLE_ITEM_SYS_UPDATED_ON')
BEGIN
    CREATE INDEX IX_BFX_HIERARCHICAL_CODE_TABLE_ITEM_SYS_UPDATED_ON ON BFX.HIERARCHICAL_CODE_TABLE_ITEM (SYS_UPDATED_ON);
END

-- BFX.IMPORT_DOCUMENT
IF NOT EXISTS (SELECT NAME FROM SYS.indexes WHERE NAME = 'IX_BFX_IMPORT_DOCUMENT_SYS_UPDATED_ON')
BEGIN
    CREATE INDEX IX_BFX_IMPORT_DOCUMENT_SYS_UPDATED_ON ON BFX.IMPORT_DOCUMENT (SYS_UPDATED_ON);
END

-- BFX.UNIVERSAL_DOCUMENT
IF NOT EXISTS (SELECT NAME FROM SYS.indexes WHERE NAME = 'IX_BFX_UNIVERSAL_DOCUMENT_SYS_UPDATED_ON')
BEGIN
    CREATE INDEX IX_BFX_UNIVERSAL_DOCUMENT_SYS_UPDATED_ON ON BFX.UNIVERSAL_DOCUMENT (SYS_UPDATED_ON);
END

-- ORG.AGENT_TRAINING
IF NOT EXISTS (SELECT NAME FROM SYS.indexes WHERE NAME = 'IX_ORG_AGENT_TRAINING_SYS_UPDATED_ON')
BEGIN
    CREATE INDEX IX_ORG_AGENT_TRAINING_SYS_UPDATED_ON ON ORG.AGENT_TRAINING (SYS_UPDATED_ON);
END

-- ORG.APPLICATION_USER_GROUP
IF NOT EXISTS (SELECT NAME FROM SYS.indexes WHERE NAME = 'IX_ORG_APPLICATION_USER_GROUP_SYS_UPDATED_ON')
BEGIN
    CREATE INDEX IX_ORG_APPLICATION_USER_GROUP_SYS_UPDATED_ON ON ORG.APPLICATION_USER_GROUP (SYS_UPDATED_ON);
END

-- ORG.ORGANISATION_UNIT
IF NOT EXISTS (SELECT NAME FROM SYS.indexes WHERE NAME = 'IX_ORG_ORGANISATION_UNIT_SYS_UPDATED_ON')
BEGIN
    CREATE INDEX IX_ORG_ORGANISATION_UNIT_SYS_UPDATED_ON ON ORG.ORGANISATION_UNIT (SYS_UPDATED_ON);
END

-- ORG.SERVICE_PROVIDER_CONTRACT
IF NOT EXISTS (SELECT NAME FROM SYS.indexes WHERE NAME = 'IX_ORG_SERVICE_PROVIDER_CONTRACT_SYS_UPDATED_ON')
BEGIN
    CREATE INDEX IX_ORG_SERVICE_PROVIDER_CONTRACT_SYS_UPDATED_ON ON ORG.SERVICE_PROVIDER_CONTRACT (SYS_UPDATED_ON);
END

-- ORG.SERVICE_PROVIDER
IF NOT EXISTS (SELECT NAME FROM SYS.indexes WHERE NAME = 'IX_ORG_SERVICE_PROVIDER_SYS_UPDATED_ON')
BEGIN
    CREATE INDEX IX_ORG_SERVICE_PROVIDER_SYS_UPDATED_ON ON ORG.SERVICE_PROVIDER (SYS_UPDATED_ON);
END

-- ORG.WORK_CALENDAR
IF NOT EXISTS (SELECT NAME FROM SYS.indexes WHERE NAME = 'IX_ORG_WORK_CALENDAR_SYS_UPDATED_ON')
BEGIN
    CREATE INDEX IX_ORG_WORK_CALENDAR_SYS_UPDATED_ON ON ORG.WORK_CALENDAR (SYS_UPDATED_ON);
END

-- PAS.AGENT_AGREEMENT
IF NOT EXISTS (SELECT NAME FROM SYS.indexes WHERE NAME = 'IX_PAS_AGENT_AGREEMENT_SYS_UPDATED_ON')
BEGIN
    CREATE INDEX IX_PAS_AGENT_AGREEMENT_SYS_UPDATED_ON ON PAS.AGENT_AGREEMENT (SYS_UPDATED_ON);
END

-- PAS.CONTRACT
IF NOT EXISTS (SELECT NAME FROM SYS.indexes WHERE NAME = 'IX_PAS_CONTRACT_SYS_UPDATED_ON')
BEGIN
    CREATE INDEX IX_PAS_CONTRACT_SYS_UPDATED_ON ON PAS.CONTRACT (SYS_UPDATED_ON);
END

-- PTY.CONSENT
IF NOT EXISTS (SELECT NAME FROM SYS.indexes WHERE NAME = 'IX_PTY_CONSENT_SYS_UPDATED_ON')
BEGIN
    CREATE INDEX IX_PTY_CONSENT_SYS_UPDATED_ON ON PTY.CONSENT (SYS_UPDATED_ON);
END

-- PTY.PARTY
IF NOT EXISTS (SELECT NAME FROM SYS.indexes WHERE NAME = 'IX_PTY_PARTY_SYS_UPDATED_ON')
BEGIN
    CREATE INDEX IX_PTY_PARTY_SYS_UPDATED_ON ON PTY.PARTY (SYS_UPDATED_ON);
END

-- REINS.MANUAL_RISK_ALLOCATION
IF NOT EXISTS (SELECT NAME FROM SYS.indexes WHERE NAME = 'IX_REINS_MANUAL_RISK_ALLOCATION_SYS_UPDATED_ON')
BEGIN
    CREATE INDEX IX_REINS_MANUAL_RISK_ALLOCATION_SYS_UPDATED_ON ON REINS.MANUAL_RISK_ALLOCATION (SYS_UPDATED_ON);
END

-- REINS.CONTRACT
IF NOT EXISTS (SELECT NAME FROM SYS.indexes WHERE NAME = 'IX_REINS_CONTRACT_SYS_UPDATED_ON')
BEGIN
    CREATE INDEX IX_REINS_CONTRACT_SYS_UPDATED_ON ON REINS.CONTRACT (SYS_UPDATED_ON);
END