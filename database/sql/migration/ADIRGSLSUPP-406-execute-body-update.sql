BEGIN TRY
BEGIN TRAN

DECLARE @CurrentValues TABLE
(
   RECIPIENT_CODE NVARCHAR(50),
   RECIPIENT_INDEX NVARCHAR(50),
   CONTRACT_NUMBER NVARCHAR(255),
   PAYMENT_ORDER_NUMBER NVARCHAR(255),
   PAYMENT_ORDER_SUBTYPE  NVARCHAR(255)
);

INSERT INTO @CurrentValues

select bn.RECIPIENT_CODE,
	   b.[key] AS RECIPIENT_INDEX,
	   doc.CONTRACT_NUMBER,
	   poHub.PAYMENT_ORDER_NUMBER,
	   poSat.PAYMENT_ORDER_SUBTYPE
from PAS.CONTRACT doc
JOIN CFX.PUBLISHED_ARTIFACT art ON art.PUBLISHED_ARTIFACT_ID = doc.PUBLISHED_ARTIFACT_ID
INNER JOIN ACC_IMPL.PAYMENT_ORDER_SAT_LATEST poSat on poSat.CONTRACT_AMENDMENT_NUMBER = doc.CONTRACT_NUMBER
INNER JOIN ACC_IMPL.PAYMENT_ORDER_HUB poHub on poHub.PAYMENT_ORDER_HKEY = poSat.PAYMENT_ORDER_HKEY
INNER JOIN ACC.PAYMENT_ORDER po on po.PAYMENT_ORDER_NUMBER = poHub.PAYMENT_ORDER_NUMBER
INNER JOIN CFG.PROCESS_STATE st on st.PROCESS_STATE_ID = po.STATE_ID
INNER JOIN ACC_IMPL.PO_RECIPIENT_LINK rLink on rLink.PAYMENT_ORDER_HKEY = poHub.PAYMENT_ORDER_HKEY
INNER JOIN PTY_IMPL.PARTY_HUB pHub on pHub.PARTY_HKEY = rLink.PARTY_HKEY
CROSS APPLY OPENJSON(doc.BODY, '$.paymentAmendmentConditions.canellationRecipients') b
CROSS APPLY OPENJSON(b.[value]) WITH (RECIPIENT_CODE NVARCHAR(64) '$.partyCode') bn
WHERE
art.CODE_NAME IN ('AccumulatedLifeInsuranceCancellation', 'CreditLifeInsuranceCancellation', 'EquityLifeInsuranceCancellation', 'InvestmentLifeInsuranceCancellation',
'MedLifeInsuranceCancellation', 'RiskLifeInsuranceCancellation')
AND st.CODE_NAME <> 'Cancelled'
AND bn.RECIPIENT_CODE = pHub.PARTY_CODE
GROUP BY bn.RECIPIENT_CODE, b.[key], doc.BODY, doc.CONTRACT_NUMBER, poHub.PAYMENT_ORDER_NUMBER, poSat.PAYMENT_ORDER_SUBTYPE

DECLARE @RecipientCode NVARCHAR(50), @RecipientIndex NVARCHAR(50), @ContractNumber NVARCHAR(255), @PaymentOrderNumber NVARCHAR(255), @PaymentOrderSubtype NVARCHAR(255)

DECLARE CNL_CURSOR CURSOR LOCAL READ_ONLY FORWARD_ONLY
FOR 

SELECT RECIPIENT_CODE,
	   RECIPIENT_INDEX,
	   CONTRACT_NUMBER,
	   PAYMENT_ORDER_NUMBER,
	   PAYMENT_ORDER_SUBTYPE
FROM @CurrentValues

OPEN CNL_CURSOR
FETCH NEXT FROM CNL_CURSOR INTO @RecipientCode, @RecipientIndex, @ContractNumber, @PaymentOrderNumber, @PaymentOrderSubtype
WHILE @@FETCH_STATUS = 0

BEGIN 

	IF @PaymentOrderSubtype IS NULL
	BEGIN

	UPDATE PAS.CONTRACT SET BODY = JSON_MODIFY(BODY, '$.paymentAmendmentConditions.canellationRecipients[' + @RecipientIndex + '].assignedPaymentOrderNumber', @PaymentOrderNumber),
	SYS_UPDATED_ON = SYSDATETIME()
	WHERE CONTRACT_NUMBER = @ContractNumber

	UPDATE bSat SET bSat.ASSIGNED_PO_NUMBER = @PaymentOrderNumber
	FROM PAS_IMPL.AMENDMENT_HUB eHub
	INNER JOIN PAS_IMPL.CNL_RECIPIENT_LINK bLink on bLink.AMENDMENT_HKEY = eHub.AMENDMENT_HKEY
	INNER JOIN PTY_IMPL.PARTY_HUB pHub on pHub.PARTY_HKEY = bLink.PARTY_HKEY
	INNER JOIN PAS_IMPL.CNL_RECIPIENT_SAT_LATEST bSat on bSat.CNL_RECIPIENT_HKEY = bLink.CNL_RECIPIENT_HKEY
	WHERE eHub.AMENDMENT_NUMBER = @ContractNumber and pHub.PARTY_CODE = @RecipientCode and bSat.IS_DELETED = 0

	END

	ELSE IF @PaymentOrderSubtype = 'CancellationPIT'
	BEGIN

	UPDATE PAS.CONTRACT SET BODY = JSON_MODIFY(BODY, '$.paymentAmendmentConditions.canellationRecipients[' + @RecipientIndex + '].assignedPitPaymentOrderNumber', @PaymentOrderNumber),
	SYS_UPDATED_ON = SYSDATETIME()
	WHERE CONTRACT_NUMBER = @ContractNumber

	UPDATE bSat SET bSat.ASSIGNED_PIT_PO_NUMBER = @PaymentOrderNumber
	FROM PAS_IMPL.AMENDMENT_HUB eHub
	INNER JOIN PAS_IMPL.CNL_RECIPIENT_LINK bLink on bLink.AMENDMENT_HKEY = eHub.AMENDMENT_HKEY
	INNER JOIN PTY_IMPL.PARTY_HUB pHub on pHub.PARTY_HKEY = bLink.PARTY_HKEY
	INNER JOIN PAS_IMPL.CNL_RECIPIENT_SAT_LATEST bSat on bSat.CNL_RECIPIENT_HKEY = bLink.CNL_RECIPIENT_HKEY
	WHERE eHub.AMENDMENT_NUMBER = @ContractNumber and pHub.PARTY_CODE = @RecipientCode and bSat.IS_DELETED = 0

	END
	
	FETCH NEXT FROM CNL_CURSOR INTO @RecipientCode, @RecipientIndex, @ContractNumber, @PaymentOrderNumber, @PaymentOrderSubtype

END

CLOSE CNL_CURSOR
DEALLOCATE CNL_CURSOR

COMMIT TRAN

END TRY

BEGIN CATCH

    ROLLBACK TRAN
    DECLARE @ErrorMessage NVARCHAR(4000); DECLARE @ErrorSeverity INT; DECLARE @ErrorState INT;
    SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = 1;
    RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);

END CATCH