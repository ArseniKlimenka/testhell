/***********************************************************
 CAUTION: USE ON A TEST ENVIRONMENT ONLY!
 CAUTION: AFTER SCRIPT EXECUTION RUN ELASTICSEARCH REINDEX!
************************************************************/

BEGIN TRY
BEGIN TRAN

DECLARE @contractNumber NVARCHAR(200) = N'ИСЖ-0000000016';
DECLARE @contractId UNIQUEIDENTIFIER = (select top 1 CONTRACT_ID from PAS.CONTRACT where CONTRACT_NUMBER = @contractNumber);
DECLARE @policyHkey NVARCHAR(200) = (SELECT TOP 1 POLICY_HKEY FROM PAS_IMPL.POLICY_HUB where CONTRACT_NUMBER = @contractNumber);
DECLARE @quoteHkey NVARCHAR(200) = (SELECT TOP 1 QUOTE_HKEY FROM PAS.QUOTE_HUB where QUOTE_NUMBER = @contractNumber);
DECLARE @activityID UNIQUEIDENTIFIER = (select top 1 ACTIVITY_ID from BFX.ACTIVITY where ENTITY_REF_ID = @contractId);

IF NOT EXISTS (SELECT * FROM ACC_IMPL.ALLOCATION where DOCUMENT_NO = @contractNumber)
BEGIN

    -- activity
	DELETE FROM BFX.ACTIVITY_DEADLINE_TARDINESS where ACTIVITY_DEADLINE_TARDINESS_ID = @activityID
	DELETE FROM BFX.ACTIVITY_RANK where ACTIVITY_ID = @activityID
	DELETE FROM BFX.ACTIVITY_SCHEDULE where ACTIVITY_SCHEDULE_ID = @activityID
	DELETE FROM BFX.SCHEDULED_ACTIVITY where SCHEDULED_ACTIVITY_ID = @activityID
	DELETE FROM BFX.SCHEDULED_ACTIVITY_RESOURCE where SCHEDULED_ACTIVITY_ID = @activityID
	DELETE FROM BFX.ACTIVITY where ACTIVITY_ID = @activityID

    -- inquiry
    DELETE FROM BFX.UNIVERSAL_DOCUMENT where UNIVERSAL_DOCUMENT_NUMBER IN (SELECT INQUIRY_NUMBER FROM PAS_IMPL.INQUIRY_HUB where INQUIRY_HKEY IN (SELECT INQUIRY_HKEY FROM PAS_IMPL.QUOTE_INQUIRY_LINK where QUOTE_INQUIRY_HKEY = @quoteHkey))
    DELETE FROM PAS_IMPL.INQUIRY_SAT where INQUIRY_HKEY IN (SELECT INQUIRY_HKEY FROM PAS_IMPL.QUOTE_INQUIRY_LINK where QUOTE_INQUIRY_HKEY = @quoteHkey)
    DELETE FROM PAS_IMPL.INQUIRY_HUB where INQUIRY_HKEY IN (SELECT INQUIRY_HKEY FROM PAS_IMPL.QUOTE_INQUIRY_LINK where QUOTE_INQUIRY_HKEY = @quoteHkey)
    DELETE FROM PAS_IMPL.QUOTE_INQUIRY_LINK where QUOTE_INQUIRY_HKEY = @quoteHkey

    -- verification
    DELETE FROM BFX.UNIVERSAL_DOCUMENT where UNIVERSAL_DOCUMENT_NUMBER IN (SELECT VERIFICATION_NUMBER FROM PAS_IMPL.VERIFICATION_HUB where VERIFICATION_HKEY IN (SELECT VERIFICATION_HKEY FROM PAS_IMPL.POLICY_VERIFICATION_LINK where POLICY_VERIFICATION_HKEY = @policyHkey))
    DELETE FROM PAS_IMPL.VERIFICATION_SAT where VERIFICATION_HKEY IN (SELECT VERIFICATION_HKEY FROM PAS_IMPL.POLICY_VERIFICATION_LINK where POLICY_HKEY = @policyHkey)
    DELETE FROM PAS_IMPL.VERIFICATION_ERROR_SAT where VERIFICATION_ERROR_HKEY IN (SELECT VERIFICATION_HKEY FROM PAS_IMPL.POLICY_VERIFICATION_LINK where POLICY_HKEY = @policyHkey)
    DELETE FROM PAS_IMPL.VERIFICATION_HUB where VERIFICATION_HKEY IN (SELECT VERIFICATION_HKEY FROM PAS_IMPL.POLICY_VERIFICATION_LINK where POLICY_HKEY = @policyHkey)
    DELETE FROM PAS_IMPL.POLICY_VERIFICATION_LINK where POLICY_HKEY = @policyHkey

    -- coverage & risks
    DELETE FROM PAS.P_COVERAGE_SAT where P_COVERAGE_HKEY IN (SELECT P_COVERAGE_HKEY FROM PAS.P_COVERAGE_LINK where POLICY_HKEY = @policyHkey)
    DELETE FROM PAS_IMPL.POLICY_RISKS_SAT where POLICY_RISKS_HKEY IN (SELECT RISK_HKEY FROM PAS.P_COVERAGE_LINK where POLICY_HKEY = @policyHkey)
    DELETE FROM PAS.P_ITEM_SAT where P_ITEM_HKEY IN (SELECT P_ITEM_HKEY FROM PAS.P_ITEM_LINK where POLICY_HKEY = @policyHkey)
    DELETE FROM PAS.P_COVERAGE_LINK where POLICY_HKEY = @policyHkey
    DELETE FROM PAS.P_ITEM_LINK where POLICY_HKEY = @policyHkey

    -- policy holder
    DELETE FROM PAS.P_HOLDER_SAT where P_HOLDER_HKEY IN (SELECT P_HOLDER_HKEY FROM PAS.P_HOLDER_LINK where POLICY_HKEY = @policyHkey)
    DELETE FROM PAS.P_HOLDER_LINK where POLICY_HKEY = @policyHkey

    -- insured person
    DELETE FROM PAS.P_INSURED_SAT where P_INSURED_HKEY IN (SELECT P_INSURED_HKEY FROM PAS.P_INSURED_LINK where POLICY_HKEY = @policyHkey)
    DELETE FROM PAS.P_INSURED_LINK where POLICY_HKEY = @policyHkey

    -- beneficiary
    DELETE FROM PAS.P_BENEFICIARY_SAT where P_BENEFICIARY_HKEY IN (SELECT P_BENEFICIARY_HKEY FROM PAS.P_BENEFICIARY_LINK where P_BENEFICIARY_HKEY = @policyHkey)
    DELETE FROM PAS.P_DESCR_BENEFICIARY_SAT where P_DESCR_BENEFICIARY_HKEY IN (SELECT P_BENEFICIARY_HKEY FROM PAS.P_BENEFICIARY_LINK where P_BENEFICIARY_HKEY = @policyHkey)
    DELETE FROM PAS.P_POLICY_BENEFICIARY_SAT where P_POLICY_BENEFICIARY_HKEY IN (SELECT P_BENEFICIARY_HKEY FROM PAS.P_BENEFICIARY_LINK where P_BENEFICIARY_HKEY = @policyHkey)
    DELETE FROM PAS_IMPL.POLICY_BENEFICIARY_SAT where POLICY_BENEFICIARY_HKEY IN (SELECT P_BENEFICIARY_HKEY FROM PAS.P_BENEFICIARY_LINK where P_BENEFICIARY_HKEY = @policyHkey)
    DELETE FROM PAS_IMPL.QUOTE_BENEFICIARY_SAT where QUOTE_BENEFICIARY_HKEY IN (SELECT P_BENEFICIARY_HKEY FROM PAS.P_BENEFICIARY_LINK where P_BENEFICIARY_HKEY = @policyHkey)
    DELETE FROM PAS.P_BENEFICIARY_LINK where POLICY_HKEY = @policyHkey
    DELETE FROM PAS.P_POLICY_BENEFICIARY_LINK where POLICY_HKEY = @policyHkey

    -- verification
    DELETE FROM PAS_IMPL.POLICY_VERIFICATION_LINK where POLICY_HKEY = @policyHkey

    -- commission
    DELETE FROM PAS_IMPL.POLICY_COMMISSION_SAT where POLICY_COMMISSION_HKEY IN (SELECT POLICY_COMMISSION_HKEY FROM PAS_IMPL.POLICY_COMMISSION_LINK where POLICY_HKEY = @policyHkey)
    DELETE FROM PAS_IMPL.POLICY_COMMISSION_LINK where POLICY_HKEY = @policyHkey

    -- com calc
    DELETE FROM PAS_IMPL.COM_CALC_EXECUTION_STATUS where EXECUTION_ID IN (SELECT EXECUTION_ID FROM PAS_IMPL.COM_CALC_LINK where POLICY_HKEY = @policyHkey)
    DELETE FROM PAS_IMPL.COM_CALC_SAT where COM_CALC_HKEY IN (SELECT COM_CALC_HKEY FROM PAS_IMPL.COM_CALC_LINK where POLICY_HKEY = @policyHkey)
    DELETE FROM PAS_IMPL.COM_CALC_LINK where POLICY_HKEY = @policyHkey

    -- objects
    DELETE FROM PAS.P_OBJECT_SAT where P_OBJECT_HKEY IN (SELECT P_OBJECT_HKEY FROM PAS.P_OBJECT_LINK where POLICY_HKEY = @policyHkey)
    DELETE FROM PAS.OBJECT_HUB where OBJECT_HKEY IN (SELECT OBJECT_HKEY FROM PAS.P_OBJECT_LINK where POLICY_HKEY = @policyHkey)
    DELETE FROM PAS.P_OBJECT_LINK where POLICY_HKEY = @policyHkey

    -- amendment
    DELETE FROM PAS_IMPL.AMENDMENT_SAT where AMENDMENT_HKEY IN (SELECT AMENDMENT_HKEY FROM PAS.P_AMENDMENT_LINK where POLICY_HKEY = @policyHkey)
    DELETE FROM PAS.AMENDMENT_SAT where AMENDMENT_HKEY IN (SELECT AMENDMENT_HKEY FROM PAS.P_AMENDMENT_LINK where POLICY_HKEY = @policyHkey)
    DELETE FROM PAS_IMPL.AMENDMENT_LINES_SAT where AMENDMENT_LINES_HKEY IN (SELECT AMENDMENT_HKEY FROM PAS.P_AMENDMENT_LINK where POLICY_HKEY = @policyHkey)
    DELETE FROM PAS_IMPL.AMENDMENT_HUB where AMENDMENT_HKEY IN (SELECT AMENDMENT_HKEY FROM PAS.P_AMENDMENT_LINK where POLICY_HKEY = @policyHkey)
    DELETE FROM PAS.AMENDMENT_HUB where AMENDMENT_HKEY IN (SELECT AMENDMENT_HKEY FROM PAS.P_AMENDMENT_LINK where POLICY_HKEY = @policyHkey)
    DELETE FROM PAS.P_AMENDMENT_LINK where POLICY_HKEY = @policyHkey
    DELETE FROM PAS_IMPL.POLICY_AMENDMENT_LINK where POLICY_HKEY IN (SELECT POLICY_HKEY FROM PAS_IMPL.POLICY_HUB where CONTRACT_NUMBER = @contractNumber)

    -- quote
    DELETE FROM PAS_IMPL.QUOTE_SAT where QUOTE_HKEY IN (SELECT QUOTE_HKEY FROM PAS.QUOTE_HUB where QUOTE_NUMBER = @contractNumber)
    DELETE FROM PAS_IMPL.QUOTE_RISKS_SAT where QUOTE_RISKS_HKEY IN (SELECT QUOTE_HKEY FROM PAS.QUOTE_HUB where QUOTE_NUMBER = @contractNumber)
    DELETE FROM PAS_IMPL.QUOTE_HUB where CONTRACT_NUMBER = @contractNumber
    DELETE FROM PAS.QUOTE_HUB where QUOTE_NUMBER = @contractNumber

    -- policy hub & sat
    DELETE FROM PAS_IMPL.POLICY_SAT where POLICY_HKEY = @policyHkey
    DELETE FROM PAS.POLICY_SAT where POLICY_HKEY = @policyHkey
    DELETE FROM PAS_IMPL.POLICY_HUB where CONTRACT_NUMBER = @contractNumber
    DELETE FROM PAS.POLICY_HUB where CONTRACT_NUMBER = @contractNumber

    -- contract
    DELETE FROM PAS.CONTRACT_HISTORY where CONTRACT_NUMBER = @contractNumber
    DELETE FROM PAS.CONTRACT where CONTRACT_NUMBER = @contractNumber

    -- entity
    DELETE FROM BFX.ENTITY_HISTORY WHERE ENTITY_ID= @contractId
	DELETE FROM BFX.RECENT_DOCUMENT WHERE ENTITY_REF_ID = @contractId
    DELETE FROM BFX.ENTITY_REF WHERE ENTITY_ID = @contractId

END ELSE
	PRINT(N'Unable to delete the contract № ''' + @contractNumber + N'''. There is a linked payment data.')
    
COMMIT TRAN
END TRY
BEGIN CATCH

    ROLLBACK TRAN
    DECLARE @ErrorMessage NVARCHAR(4000); DECLARE @ErrorSeverity INT; DECLARE @ErrorState INT;
    SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = 1;
    RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);

END CATCH