BEGIN TRY
BEGIN TRAN

DECLARE @CurrentValues TABLE
(
   BENEFICIARY_CODE NVARCHAR(50),
   BENFICIARY_INDEX NVARCHAR(50),
   CLAIM_NUMBER NVARCHAR(255),
   PAYMENT_ORDER_NUMBER NVARCHAR(255)
);

INSERT INTO @CurrentValues

select bn.BENEFICIARY_CODE,
	   b.[key] AS BENFICIARY_INDEX,
	   CLM.CLAIM_NUMBER,
	   poHub.PAYMENT_ORDER_NUMBER
from CLM.CLAIM clm
INNER JOIN ACC_IMPL.PAYMENT_ORDER_SAT_LATEST poSat on poSat.REFERENCE_NUMBER = clm.CLAIM_NUMBER
INNER JOIN ACC_IMPL.PAYMENT_ORDER_HUB poHub on poHub.PAYMENT_ORDER_HKEY = poSat.PAYMENT_ORDER_HKEY
INNER JOIN ACC.PAYMENT_ORDER po on po.PAYMENT_ORDER_NUMBER = poHub.PAYMENT_ORDER_NUMBER
INNER JOIN CFG.PROCESS_STATE st on st.PROCESS_STATE_ID = po.STATE_ID
INNER JOIN ACC_IMPL.PO_RECIPIENT_LINK rLink on rLink.PAYMENT_ORDER_HKEY = poHub.PAYMENT_ORDER_HKEY
INNER JOIN PTY_IMPL.PARTY_HUB pHub on pHub.PARTY_HKEY = rLink.PARTY_HKEY
CROSS APPLY OPENJSON(clm.BODY, '$.claimBeneficiaries') b
CROSS APPLY OPENJSON(b.[value]) WITH (BENEFICIARY_CODE NVARCHAR(64) '$.partyCode') bn
WHERE 
st.CODE_NAME <> 'Cancelled'
AND bn.BENEFICIARY_CODE = pHub.PARTY_CODE
GROUP BY bn.BENEFICIARY_CODE, b.[key], clm.COMMON_BODY, CLM.BODY, CLM.CLAIM_NUMBER, poHub.PAYMENT_ORDER_NUMBER

DECLARE @BeneficiaryCode NVARCHAR(50), @BeneficiaryIndex NVARCHAR(50), @ClaimNumber NVARCHAR(255), @PaymentOrderNumber NVARCHAR(255)

DECLARE CLM_CURSOR CURSOR LOCAL READ_ONLY FORWARD_ONLY
FOR 

SELECT BENEFICIARY_CODE,
	   BENFICIARY_INDEX,
	   CLAIM_NUMBER,
	   PAYMENT_ORDER_NUMBER
FROM @CurrentValues

OPEN CLM_CURSOR
FETCH NEXT FROM CLM_CURSOR INTO @BeneficiaryCode, @BeneficiaryIndex, @ClaimNumber, @PaymentOrderNumber
WHILE @@FETCH_STATUS = 0

BEGIN 

	UPDATE CLM.CLAIM SET BODY = JSON_MODIFY(BODY, '$.claimBeneficiaries[' + @BeneficiaryIndex + '].assignedPaymentOrderNumber', @PaymentOrderNumber),
	COMMON_BODY = JSON_MODIFY(COMMON_BODY, '$.attributes.claimBeneficiaries[' + @BeneficiaryIndex + '].assignedPaymentOrderNumber', @PaymentOrderNumber) 
	WHERE CLAIM_NUMBER = @ClaimNumber

	UPDATE bSat SET bSat.ASSIGNED_PO_NUMBER = @PaymentOrderNumber
	FROM CLM_IMPL.CLM_HUB cHub
	INNER JOIN CLM_IMPL.CLM_BENEFICIARY_LINK bLink on bLink.CLM_HKEY = cHub.CLM_HKEY
	INNER JOIN PTY_IMPL.PARTY_HUB pHub on pHub.PARTY_HKEY = bLink.PARTY_HKEY
	INNER JOIN CLM_IMPL.CLM_BENEFICIARY_SAT_LATEST bSat on bSat.CLM_BENEFICIARY_HKEY = bLink.CLM_BENEFICIARY_HKEY
	WHERE cHub.CLAIM_NUMBER = @ClaimNumber and pHub.PARTY_CODE = @BeneficiaryCode and bSat.IS_DELETED = 0
	
	FETCH NEXT FROM CLM_CURSOR INTO @BeneficiaryCode, @BeneficiaryIndex, @ClaimNumber, @PaymentOrderNumber

END

CLOSE CLM_CURSOR
DEALLOCATE CLM_CURSOR

COMMIT TRAN

END TRY

BEGIN CATCH

    ROLLBACK TRAN
    DECLARE @ErrorMessage NVARCHAR(4000); DECLARE @ErrorSeverity INT; DECLARE @ErrorState INT;
    SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = 1;
    RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);

END CATCH